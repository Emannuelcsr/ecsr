package br.com.repository.interfaces;

import java.io.Serializable;

import org.springframework.stereotype.Repository;

/**
 * üîê RepositoryLogin
 * -------------------------------------------------------------
 * Interface respons√°vel por definir o contrato de autentica√ß√£o
 * de usu√°rios na aplica√ß√£o.
 * 
 * üìå Padr√£o utilizado: Repository (Spring Data)
 * - Marca esta interface como um componente de persist√™ncia
 * - Permite que o Spring a reconhe√ßa e a injete automaticamente
 * 
 * ‚úÖ Implementa√ß√µes desta interface devem:
 * - Acessar o banco de dados (ex: via JDBC, JPA, Hibernate)
 * - Verificar se o login e a senha fornecidos s√£o v√°lidos
 * - Retornar true se as credenciais forem corretas
 * 
 * ‚ö†Ô∏è Exce√ß√µes:
 * - Pode lan√ßar Exception gen√©rica, mas o ideal seria criar
 *   exce√ß√µes customizadas como `LoginInvalidoException` etc.
 * 
 * üß± Serializable:
 * - Permite que essa interface seja usada em contextos distribu√≠dos,
 *   como sess√µes ou cache (boas pr√°ticas do Spring).
 */
@Repository
public interface RepositoryLogin extends Serializable {

    /**
     * üß™ Verifica se um login e senha s√£o v√°lidos no sistema.
     * 
     * @param login Nome de login fornecido pelo usu√°rio
     * @param senha Senha correspondente
     * @return true se o login for v√°lido; false caso contr√°rio
     * @throws Exception Caso ocorra erro ao acessar o banco ou regras de neg√≥cio
     */
    boolean autentico(String login, String senha) throws Exception;
}
